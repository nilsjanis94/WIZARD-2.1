[tool:pytest]
# Pytest configuration for WIZARD-2.1

# Test discovery
testpaths = tests
norecursedirs = .git venv build dist tob_dataloader
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=35
    --maxfail=10
    --durations=10
    --ignore=tob_dataloader/tests

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    ui: UI tests using pytest-qt
    slow: Slow running tests
    network: Tests requiring network access
    file_io: Tests requiring file system access
    encryption: Tests involving encryption/decryption
    data_processing: Tests for data processing functions

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:PyQt6.*
    ignore::UserWarning:matplotlib.*

# Minimum version
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Use: pytest -n auto
# Or: pytest -n 4
#
# Hinweis: Für das Unterprojekt tob_dataloader bitte separat ausführen:
#   cd tob_dataloader && python -m pytest

# Coverage configuration
[coverage:run]
source = src
omit =
    src/views/*           # GUI-specific views
    src/controllers/*     # GUI-dependent controllers
    src/main.py          # Application entry point
    */__pycache__/*
    */tests/*
    */venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
